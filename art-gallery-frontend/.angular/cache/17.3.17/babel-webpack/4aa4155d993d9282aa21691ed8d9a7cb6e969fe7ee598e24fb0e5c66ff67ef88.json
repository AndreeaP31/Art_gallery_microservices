{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/http/http-client.service\";\nexport class ArtistListViewModel {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.artistsSubject = new BehaviorSubject([]);\n    this.artists$ = this.artistsSubject.asObservable();\n    this.loadingSubject = new BehaviorSubject(false);\n    this.loading$ = this.loadingSubject.asObservable();\n    this.errorSubject = new BehaviorSubject(null);\n    this.error$ = this.errorSubject.asObservable();\n    this.searchQuerySubject = new BehaviorSubject('');\n    this.searchQuery$ = this.searchQuerySubject.asObservable();\n  }\n  loadArtists() {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n    this.httpClient.get('artist', 'artists').pipe(finalize(() => this.loadingSubject.next(false))).subscribe(artists => this.artistsSubject.next(artists), error => this.errorSubject.next('Failed to load artists. Please try again later.'));\n  }\n  searchArtists(query) {\n    this.searchQuerySubject.next(query);\n    if (!query.trim()) {\n      this.loadArtists();\n      return;\n    }\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n    this.httpClient.get('artist', `artists/search?query=${query}`).pipe(finalize(() => this.loadingSubject.next(false))).subscribe(artists => this.artistsSubject.next(artists), error => this.errorSubject.next('Failed to search artists. Please try again later.'));\n  }\n  clearSearch() {\n    this.searchQuerySubject.next('');\n    this.loadArtists();\n  }\n  static {\n    this.ɵfac = function ArtistListViewModel_Factory(t) {\n      return new (t || ArtistListViewModel)(i0.ɵɵinject(i1.HttpClientService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArtistListViewModel,\n      factory: ArtistListViewModel.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","finalize","ArtistListViewModel","constructor","httpClient","artistsSubject","artists$","asObservable","loadingSubject","loading$","errorSubject","error$","searchQuerySubject","searchQuery$","loadArtists","next","get","pipe","subscribe","artists","error","searchArtists","query","trim","clearSearch","i0","ɵɵinject","i1","HttpClientService","factory","ɵfac"],"sources":["C:\\fac\\an3_sem2\\ps\\proiect_ps - Copy (2)\\art-gallery-frontend\\src\\app\\view-models\\artist-list.view-model.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ArtistListItem } from '../models/artist.model';\r\nimport { HttpClientService } from '../core/http/http-client.service';\r\n\r\n@Injectable()\r\nexport class ArtistListViewModel {\r\n  private artistsSubject = new BehaviorSubject<ArtistListItem[]>([]);\r\n  public artists$ = this.artistsSubject.asObservable();\r\n\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n  public loading$ = this.loadingSubject.asObservable();\r\n\r\n  private errorSubject = new BehaviorSubject<string | null>(null);\r\n  public error$ = this.errorSubject.asObservable();\r\n\r\n  private searchQuerySubject = new BehaviorSubject<string>('');\r\n  public searchQuery$ = this.searchQuerySubject.asObservable();\r\n\r\n  constructor(private httpClient: HttpClientService) {}\r\n\r\n  loadArtists(): void {\r\n    this.loadingSubject.next(true);\r\n    this.errorSubject.next(null);\r\n\r\n    this.httpClient.get<ArtistListItem[]>('artist', 'artists')\r\n      .pipe(\r\n        finalize(() => this.loadingSubject.next(false))\r\n      )\r\n      .subscribe(\r\n        artists => this.artistsSubject.next(artists),\r\n        error => this.errorSubject.next('Failed to load artists. Please try again later.')\r\n      );\r\n  }\r\n\r\n  searchArtists(query: string): void {\r\n    this.searchQuerySubject.next(query);\r\n\r\n    if (!query.trim()) {\r\n      this.loadArtists();\r\n      return;\r\n    }\r\n\r\n    this.loadingSubject.next(true);\r\n    this.errorSubject.next(null);\r\n\r\n    this.httpClient.get<ArtistListItem[]>('artist', `artists/search?query=${query}`)\r\n      .pipe(\r\n        finalize(() => this.loadingSubject.next(false))\r\n      )\r\n      .subscribe(\r\n        artists => this.artistsSubject.next(artists),\r\n        error => this.errorSubject.next('Failed to search artists. Please try again later.')\r\n      );\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.searchQuerySubject.next('');\r\n    this.loadArtists();\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;;;AAKzC,OAAM,MAAOC,mBAAmB;EAa9BC,YAAoBC,UAA6B;IAA7B,KAAAA,UAAU,GAAVA,UAAU;IAZtB,KAAAC,cAAc,GAAG,IAAIL,eAAe,CAAmB,EAAE,CAAC;IAC3D,KAAAM,QAAQ,GAAG,IAAI,CAACD,cAAc,CAACE,YAAY,EAAE;IAE5C,KAAAC,cAAc,GAAG,IAAIR,eAAe,CAAU,KAAK,CAAC;IACrD,KAAAS,QAAQ,GAAG,IAAI,CAACD,cAAc,CAACD,YAAY,EAAE;IAE5C,KAAAG,YAAY,GAAG,IAAIV,eAAe,CAAgB,IAAI,CAAC;IACxD,KAAAW,MAAM,GAAG,IAAI,CAACD,YAAY,CAACH,YAAY,EAAE;IAExC,KAAAK,kBAAkB,GAAG,IAAIZ,eAAe,CAAS,EAAE,CAAC;IACrD,KAAAa,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACL,YAAY,EAAE;EAER;EAEpDO,WAAWA,CAAA;IACT,IAAI,CAACN,cAAc,CAACO,IAAI,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACL,YAAY,CAACK,IAAI,CAAC,IAAI,CAAC;IAE5B,IAAI,CAACX,UAAU,CAACY,GAAG,CAAmB,QAAQ,EAAE,SAAS,CAAC,CACvDC,IAAI,CACHhB,QAAQ,CAAC,MAAM,IAAI,CAACO,cAAc,CAACO,IAAI,CAAC,KAAK,CAAC,CAAC,CAChD,CACAG,SAAS,CACRC,OAAO,IAAI,IAAI,CAACd,cAAc,CAACU,IAAI,CAACI,OAAO,CAAC,EAC5CC,KAAK,IAAI,IAAI,CAACV,YAAY,CAACK,IAAI,CAAC,iDAAiD,CAAC,CACnF;EACL;EAEAM,aAAaA,CAACC,KAAa;IACzB,IAAI,CAACV,kBAAkB,CAACG,IAAI,CAACO,KAAK,CAAC;IAEnC,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE,EAAE;MACjB,IAAI,CAACT,WAAW,EAAE;MAClB;;IAGF,IAAI,CAACN,cAAc,CAACO,IAAI,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACL,YAAY,CAACK,IAAI,CAAC,IAAI,CAAC;IAE5B,IAAI,CAACX,UAAU,CAACY,GAAG,CAAmB,QAAQ,EAAE,wBAAwBM,KAAK,EAAE,CAAC,CAC7EL,IAAI,CACHhB,QAAQ,CAAC,MAAM,IAAI,CAACO,cAAc,CAACO,IAAI,CAAC,KAAK,CAAC,CAAC,CAChD,CACAG,SAAS,CACRC,OAAO,IAAI,IAAI,CAACd,cAAc,CAACU,IAAI,CAACI,OAAO,CAAC,EAC5CC,KAAK,IAAI,IAAI,CAACV,YAAY,CAACK,IAAI,CAAC,mDAAmD,CAAC,CACrF;EACL;EAEAS,WAAWA,CAAA;IACT,IAAI,CAACZ,kBAAkB,CAACG,IAAI,CAAC,EAAE,CAAC;IAChC,IAAI,CAACD,WAAW,EAAE;EACpB;;;uBArDWZ,mBAAmB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,iBAAA;IAAA;EAAA;;;aAAnB1B,mBAAmB;MAAA2B,OAAA,EAAnB3B,mBAAmB,CAAA4B;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}