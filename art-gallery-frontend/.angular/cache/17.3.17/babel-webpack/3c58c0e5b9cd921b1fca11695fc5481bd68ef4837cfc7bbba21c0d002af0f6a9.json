{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { ArtworkType } from '../models/artwork.model';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/http/http-client.service\";\nexport class ArtworkListViewModel {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.artworksSubject = new BehaviorSubject([]);\n    this.artworks$ = this.artworksSubject.asObservable();\n    this.artistsSubject = new BehaviorSubject([]);\n    this.artists$ = this.artistsSubject.asObservable();\n    this.loadingSubject = new BehaviorSubject(false);\n    this.loading$ = this.loadingSubject.asObservable();\n    this.errorSubject = new BehaviorSubject(null);\n    this.error$ = this.errorSubject.asObservable();\n    this.searchQuerySubject = new BehaviorSubject('');\n    this.searchQuery$ = this.searchQuerySubject.asObservable();\n    this.filterSubject = new BehaviorSubject({});\n    this.filter$ = this.filterSubject.asObservable();\n    // Artwork types for filter dropdown\n    this.artworkTypes = Object.values(ArtworkType);\n  }\n  loadArtworks() {\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n    this.httpClient.get('artwork', 'artworks').pipe(finalize(() => this.loadingSubject.next(false))).subscribe(artworks => this.artworksSubject.next(artworks), error => this.errorSubject.next('Failed to load artworks. Please try again later.'));\n  }\n  loadArtists() {\n    this.httpClient.get('artist', 'artists').subscribe(artists => this.artistsSubject.next(artists), error => this.errorSubject.next('Failed to load artists for filter. Please try again later.'));\n  }\n  searchArtworks(query) {\n    this.searchQuerySubject.next(query);\n    if (!query.trim()) {\n      this.loadArtworks();\n      return;\n    }\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n    this.httpClient.get('artwork', `artworks/search?query=${query}`).pipe(finalize(() => this.loadingSubject.next(false))).subscribe(artworks => this.artworksSubject.next(artworks), error => this.errorSubject.next('Failed to search artworks. Please try again later.'));\n  }\n  filterArtworks(filter) {\n    this.filterSubject.next(filter);\n    this.loadingSubject.next(true);\n    this.errorSubject.next(null);\n    let params = new HttpParams();\n    if (filter.artistId) {\n      params = params.set('artistId', filter.artistId.toString());\n    }\n    if (filter.type) {\n      params = params.set('type', filter.type);\n    }\n    if (filter.minYear) {\n      params = params.set('minYear', filter.minYear.toString());\n    }\n    if (filter.maxYear) {\n      params = params.set('maxYear', filter.maxYear.toString());\n    }\n    if (filter.minPrice) {\n      params = params.set('minPrice', filter.minPrice.toString());\n    }\n    if (filter.maxPrice) {\n      params = params.set('maxPrice', filter.maxPrice.toString());\n    }\n    if (filter.sold !== undefined) {\n      params = params.set('sold', filter.sold.toString());\n    }\n    this.httpClient.get('artwork', 'artworks/filter', params).pipe(finalize(() => this.loadingSubject.next(false))).subscribe(artworks => this.artworksSubject.next(artworks), error => this.errorSubject.next('Failed to filter artworks. Please try again later.'));\n  }\n  clearFilters() {\n    this.filterSubject.next({});\n    this.loadArtworks();\n  }\n  clearSearch() {\n    this.searchQuerySubject.next('');\n    this.loadArtworks();\n  }\n  static {\n    this.ɵfac = function ArtworkListViewModel_Factory(t) {\n      return new (t || ArtworkListViewModel)(i0.ɵɵinject(i1.HttpClientService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArtworkListViewModel,\n      factory: ArtworkListViewModel.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","finalize","ArtworkType","HttpParams","ArtworkListViewModel","constructor","httpClient","artworksSubject","artworks$","asObservable","artistsSubject","artists$","loadingSubject","loading$","errorSubject","error$","searchQuerySubject","searchQuery$","filterSubject","filter$","artworkTypes","Object","values","loadArtworks","next","get","pipe","subscribe","artworks","error","loadArtists","artists","searchArtworks","query","trim","filterArtworks","filter","params","artistId","set","toString","type","minYear","maxYear","minPrice","maxPrice","sold","undefined","clearFilters","clearSearch","i0","ɵɵinject","i1","HttpClientService","factory","ɵfac"],"sources":["C:\\fac\\an3_sem2\\ps\\proiect_ps - Copy (2)\\art-gallery-frontend\\src\\app\\view-models\\artwork-list.view-model.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { ArtworkListItem, ArtworkFilter, ArtworkType } from '../models/artwork.model';\r\nimport { ArtistListItem } from '../models/artist.model';\r\nimport { HttpClientService } from '../core/http/http-client.service';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class ArtworkListViewModel {\r\n  private artworksSubject = new BehaviorSubject<ArtworkListItem[]>([]);\r\n  public artworks$ = this.artworksSubject.asObservable();\r\n\r\n  private artistsSubject = new BehaviorSubject<ArtistListItem[]>([]);\r\n  public artists$ = this.artistsSubject.asObservable();\r\n\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n  public loading$ = this.loadingSubject.asObservable();\r\n\r\n  private errorSubject = new BehaviorSubject<string | null>(null);\r\n  public error$ = this.errorSubject.asObservable();\r\n\r\n  private searchQuerySubject = new BehaviorSubject<string>('');\r\n  public searchQuery$ = this.searchQuerySubject.asObservable();\r\n\r\n  private filterSubject = new BehaviorSubject<ArtworkFilter>({});\r\n  public filter$ = this.filterSubject.asObservable();\r\n\r\n  // Artwork types for filter dropdown\r\n  public artworkTypes = Object.values(ArtworkType);\r\n\r\n  constructor(\r\n    private httpClient: HttpClientService\r\n  ) {}\r\n\r\n  loadArtworks(): void {\r\n    this.loadingSubject.next(true);\r\n    this.errorSubject.next(null);\r\n\r\n    this.httpClient.get<ArtworkListItem[]>('artwork', 'artworks')\r\n      .pipe(\r\n        finalize(() => this.loadingSubject.next(false))\r\n      )\r\n      .subscribe(\r\n        artworks => this.artworksSubject.next(artworks),\r\n        error => this.errorSubject.next('Failed to load artworks. Please try again later.')\r\n      );\r\n  }\r\n\r\n  loadArtists(): void {\r\n    this.httpClient.get<ArtistListItem[]>('artist', 'artists')\r\n      .subscribe(\r\n        artists => this.artistsSubject.next(artists),\r\n        error => this.errorSubject.next('Failed to load artists for filter. Please try again later.')\r\n      );\r\n  }\r\n\r\n  searchArtworks(query: string): void {\r\n    this.searchQuerySubject.next(query);\r\n\r\n    if (!query.trim()) {\r\n      this.loadArtworks();\r\n      return;\r\n    }\r\n\r\n    this.loadingSubject.next(true);\r\n    this.errorSubject.next(null);\r\n\r\n    this.httpClient.get<ArtworkListItem[]>('artwork', `artworks/search?query=${query}`)\r\n      .pipe(\r\n        finalize(() => this.loadingSubject.next(false))\r\n      )\r\n      .subscribe(\r\n        artworks => this.artworksSubject.next(artworks),\r\n        error => this.errorSubject.next('Failed to search artworks. Please try again later.')\r\n      );\r\n  }\r\n\r\n  filterArtworks(filter: ArtworkFilter): void {\r\n    this.filterSubject.next(filter);\r\n    this.loadingSubject.next(true);\r\n    this.errorSubject.next(null);\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (filter.artistId) {\r\n      params = params.set('artistId', filter.artistId.toString());\r\n    }\r\n\r\n    if (filter.type) {\r\n      params = params.set('type', filter.type);\r\n    }\r\n\r\n    if (filter.minYear) {\r\n      params = params.set('minYear', filter.minYear.toString());\r\n    }\r\n\r\n    if (filter.maxYear) {\r\n      params = params.set('maxYear', filter.maxYear.toString());\r\n    }\r\n\r\n    if (filter.minPrice) {\r\n      params = params.set('minPrice', filter.minPrice.toString());\r\n    }\r\n\r\n    if (filter.maxPrice) {\r\n      params = params.set('maxPrice', filter.maxPrice.toString());\r\n    }\r\n\r\n    if (filter.sold !== undefined) {\r\n      params = params.set('sold', filter.sold.toString());\r\n    }\r\n\r\n    this.httpClient.get<ArtworkListItem[]>('artwork', 'artworks/filter', params)\r\n      .pipe(\r\n        finalize(() => this.loadingSubject.next(false))\r\n      )\r\n      .subscribe(\r\n        artworks => this.artworksSubject.next(artworks),\r\n        error => this.errorSubject.next('Failed to filter artworks. Please try again later.')\r\n      );\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterSubject.next({});\r\n    this.loadArtworks();\r\n  }\r\n\r\n  clearSearch(): void {\r\n    this.searchQuerySubject.next('');\r\n    this.loadArtworks();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}