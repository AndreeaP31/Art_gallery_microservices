{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ArtworkService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.artworkServiceUrl;\n  }\n  getArtworks() {\n    return this.http.get(`${this.apiUrl}/artworks`);\n  }\n  getArtworkById(id) {\n    return this.http.get(`${this.apiUrl}/artworks/${id}`);\n  }\n  getArtworksByArtist(artistId) {\n    return this.http.get(`${this.apiUrl}/artworks/artist/${artistId}`);\n  }\n  searchArtworks(query) {\n    return this.http.get(`${this.apiUrl}/artworks/search?query=${query}`);\n  }\n  filterArtworks(filter) {\n    let params = new HttpParams();\n    if (filter.artistId) {\n      params = params.set('artistId', filter.artistId.toString());\n    }\n    if (filter.type) {\n      params = params.set('type', filter.type);\n    }\n    if (filter.minYear) {\n      params = params.set('minYear', filter.minYear.toString());\n    }\n    if (filter.maxYear) {\n      params = params.set('maxYear', filter.maxYear.toString());\n    }\n    if (filter.minPrice) {\n      params = params.set('minPrice', filter.minPrice.toString());\n    }\n    if (filter.maxPrice) {\n      params = params.set('maxPrice', filter.maxPrice.toString());\n    }\n    if (filter.sold !== undefined) {\n      params = params.set('sold', filter.sold.toString());\n    }\n    return this.http.get(`${this.apiUrl}/artworks/filter`, {\n      params\n    });\n  }\n  createArtwork(artwork) {\n    return this.http.post(`${this.apiUrl}/artworks`, artwork);\n  }\n  updateArtwork(id, artwork) {\n    return this.http.put(`${this.apiUrl}/artworks/${id}`, artwork);\n  }\n  deleteArtwork(id) {\n    return this.http.delete(`${this.apiUrl}/artworks/${id}`);\n  }\n  sellArtwork(id) {\n    return this.http.post(`${this.apiUrl}/artworks/${id}/sell`, {});\n  }\n  exportArtworks(format) {\n    return this.http.get(`${this.apiUrl}/artworks/export/${format}`, {\n      responseType: 'blob'\n    });\n  }\n  static {\n    this.ɵfac = function ArtworkService_Factory(t) {\n      return new (t || ArtworkService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArtworkService,\n      factory: ArtworkService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpParams","environment","ArtworkService","constructor","http","apiUrl","artworkServiceUrl","getArtworks","get","getArtworkById","id","getArtworksByArtist","artistId","searchArtworks","query","filterArtworks","filter","params","set","toString","type","minYear","maxYear","minPrice","maxPrice","sold","undefined","createArtwork","artwork","post","updateArtwork","put","deleteArtwork","delete","sellArtwork","exportArtworks","format","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\fac\\an3_sem2\\ps\\proiect_ps - Copy (2)\\art-gallery-frontend\\src\\app\\services\\artwork.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '@env/environment';\r\nimport { Artwork, ArtworkListItem, ArtworkFilter, ArtworkType } from '../models/artwork.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtworkService {\r\n  private apiUrl = environment.artworkServiceUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getArtworks(): Observable<ArtworkListItem[]> {\r\n    return this.http.get<ArtworkListItem[]>(`${this.apiUrl}/artworks`);\r\n  }\r\n\r\n  getArtworkById(id: number): Observable<Artwork> {\r\n    return this.http.get<Artwork>(`${this.apiUrl}/artworks/${id}`);\r\n  }\r\n\r\n  getArtworksByArtist(artistId: number): Observable<ArtworkListItem[]> {\r\n    return this.http.get<ArtworkListItem[]>(`${this.apiUrl}/artworks/artist/${artistId}`);\r\n  }\r\n\r\n  searchArtworks(query: string): Observable<ArtworkListItem[]> {\r\n    return this.http.get<ArtworkListItem[]>(`${this.apiUrl}/artworks/search?query=${query}`);\r\n  }\r\n\r\n  filterArtworks(filter: ArtworkFilter): Observable<ArtworkListItem[]> {\r\n    let params = new HttpParams();\r\n    \r\n    if (filter.artistId) {\r\n      params = params.set('artistId', filter.artistId.toString());\r\n    }\r\n    \r\n    if (filter.type) {\r\n      params = params.set('type', filter.type);\r\n    }\r\n    \r\n    if (filter.minYear) {\r\n      params = params.set('minYear', filter.minYear.toString());\r\n    }\r\n    \r\n    if (filter.maxYear) {\r\n      params = params.set('maxYear', filter.maxYear.toString());\r\n    }\r\n    \r\n    if (filter.minPrice) {\r\n      params = params.set('minPrice', filter.minPrice.toString());\r\n    }\r\n    \r\n    if (filter.maxPrice) {\r\n      params = params.set('maxPrice', filter.maxPrice.toString());\r\n    }\r\n    \r\n    if (filter.sold !== undefined) {\r\n      params = params.set('sold', filter.sold.toString());\r\n    }\r\n    \r\n    return this.http.get<ArtworkListItem[]>(`${this.apiUrl}/artworks/filter`, { params });\r\n  }\r\n\r\n  createArtwork(artwork: Omit<Artwork, 'id'>): Observable<Artwork> {\r\n    return this.http.post<Artwork>(`${this.apiUrl}/artworks`, artwork);\r\n  }\r\n\r\n  updateArtwork(id: number, artwork: Partial<Artwork>): Observable<Artwork> {\r\n    return this.http.put<Artwork>(`${this.apiUrl}/artworks/${id}`, artwork);\r\n  }\r\n\r\n  deleteArtwork(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/artworks/${id}`);\r\n  }\r\n\r\n  sellArtwork(id: number): Observable<Artwork> {\r\n    return this.http.post<Artwork>(`${this.apiUrl}/artworks/${id}/sell`, {});\r\n  }\r\n\r\n  exportArtworks(format: 'csv' | 'json' | 'xml' | 'doc'): Observable<Blob> {\r\n    return this.http.get(`${this.apiUrl}/artworks/export/${format}`, {\r\n      responseType: 'blob'\r\n    });\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}