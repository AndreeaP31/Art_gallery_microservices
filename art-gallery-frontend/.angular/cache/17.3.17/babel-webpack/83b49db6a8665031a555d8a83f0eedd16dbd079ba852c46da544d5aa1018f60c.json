{"ast":null,"code":"import { environment } from '@env/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ArtistService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.artistServiceUrl;\n  }\n  getArtists() {\n    return this.http.get(`${this.apiUrl}/artists`);\n  }\n  getArtistById(id) {\n    return this.http.get(`${this.apiUrl}/artists/${id}`);\n  }\n  searchArtists(query) {\n    return this.http.get(`${this.apiUrl}/artists/search?query=${query}`);\n  }\n  createArtist(artist) {\n    return this.http.post(`${this.apiUrl}/artists`, artist);\n  }\n  updateArtist(id, artist) {\n    return this.http.put(`${this.apiUrl}/artists/${id}`, artist);\n  }\n  deleteArtist(id) {\n    return this.http.delete(`${this.apiUrl}/artists/${id}`);\n  }\n  static {\n    this.ɵfac = function ArtistService_Factory(t) {\n      return new (t || ArtistService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArtistService,\n      factory: ArtistService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","ArtistService","constructor","http","apiUrl","artistServiceUrl","getArtists","get","getArtistById","id","searchArtists","query","createArtist","artist","post","updateArtist","put","deleteArtist","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\fac\\an3_sem2\\ps\\proiect_ps - Copy (2)\\art-gallery-frontend\\src\\app\\services\\artist.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '@env/environment';\r\nimport { Artist, ArtistListItem } from '../models/artist.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n  private apiUrl = environment.artistServiceUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getArtists(): Observable<ArtistListItem[]> {\r\n    return this.http.get<ArtistListItem[]>(`${this.apiUrl}/artists`);\r\n  }\r\n\r\n  getArtistById(id: number): Observable<Artist> {\r\n    return this.http.get<Artist>(`${this.apiUrl}/artists/${id}`);\r\n  }\r\n\r\n  searchArtists(query: string): Observable<ArtistListItem[]> {\r\n    return this.http.get<ArtistListItem[]>(`${this.apiUrl}/artists/search?query=${query}`);\r\n  }\r\n\r\n  createArtist(artist: Omit<Artist, 'id'>): Observable<Artist> {\r\n    return this.http.post<Artist>(`${this.apiUrl}/artists`, artist);\r\n  }\r\n\r\n  updateArtist(id: number, artist: Partial<Artist>): Observable<Artist> {\r\n    return this.http.put<Artist>(`${this.apiUrl}/artists/${id}`, artist);\r\n  }\r\n\r\n  deleteArtist(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/artists/${id}`);\r\n  }\r\n}"],"mappings":"AAIA,SAASA,WAAW,QAAQ,kBAAkB;;;AAM9C,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACK,gBAAgB;EAEL;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAmB,GAAG,IAAI,CAACH,MAAM,UAAU,CAAC;EAClE;EAEAI,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,MAAM,YAAYK,EAAE,EAAE,CAAC;EAC9D;EAEAC,aAAaA,CAACC,KAAa;IACzB,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAmB,GAAG,IAAI,CAACH,MAAM,yBAAyBO,KAAK,EAAE,CAAC;EACxF;EAEAC,YAAYA,CAACC,MAA0B;IACrC,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAS,GAAG,IAAI,CAACV,MAAM,UAAU,EAAES,MAAM,CAAC;EACjE;EAEAE,YAAYA,CAACN,EAAU,EAAEI,MAAuB;IAC9C,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAS,GAAG,IAAI,CAACZ,MAAM,YAAYK,EAAE,EAAE,EAAEI,MAAM,CAAC;EACtE;EAEAI,YAAYA,CAACR,EAAU;IACrB,OAAO,IAAI,CAACN,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACd,MAAM,YAAYK,EAAE,EAAE,CAAC;EAC/D;;;uBA3BWR,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbrB,aAAa;MAAAsB,OAAA,EAAbtB,aAAa,CAAAuB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}