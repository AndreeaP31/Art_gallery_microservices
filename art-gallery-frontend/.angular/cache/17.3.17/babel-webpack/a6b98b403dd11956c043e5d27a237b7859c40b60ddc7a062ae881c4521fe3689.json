{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from '@env/environment';\nimport { UserRole } from '../../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.userServiceUrl;\n    this.tokenKey = 'auth_token';\n    this.userKey = 'current_user';\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    this.isAuthenticatedSubject = new BehaviorSubject(false);\n    this.isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n    this.loadStoredUser();\n  }\n  loadStoredUser() {\n    const token = localStorage.getItem(this.tokenKey);\n    const userJson = localStorage.getItem(this.userKey);\n    if (token && userJson) {\n      try {\n        const user = JSON.parse(userJson);\n        this.currentUserSubject.next(user);\n        this.isAuthenticatedSubject.next(true);\n      } catch (e) {\n        this.logout();\n      }\n    }\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/auth/login`, credentials).pipe(tap(response => {\n      localStorage.setItem(this.tokenKey, response.token);\n      localStorage.setItem(this.userKey, JSON.stringify(response.user));\n      this.currentUserSubject.next(response.user);\n      this.isAuthenticatedSubject.next(true);\n    }), map(response => response.user));\n  }\n  register(registration) {\n    return this.http.post(`${this.apiUrl}/auth/register`, registration).pipe(tap(response => {\n      localStorage.setItem(this.tokenKey, response.token);\n      localStorage.setItem(this.userKey, JSON.stringify(response.user));\n      this.currentUserSubject.next(response.user);\n      this.isAuthenticatedSubject.next(true);\n    }), map(response => response.user));\n  }\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n    localStorage.removeItem(this.userKey);\n    this.currentUserSubject.next(null);\n    this.isAuthenticatedSubject.next(false);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  hasRole(role) {\n    const user = this.getCurrentUser();\n    return !!user && user.role === role;\n  }\n  isEmployee() {\n    const user = this.getCurrentUser();\n    return !!user && (user.role === UserRole.EMPLOYEE || user.role === UserRole.MANAGER || user.role === UserRole.ADMIN);\n  }\n  isManager() {\n    const user = this.getCurrentUser();\n    return !!user && (user.role === UserRole.MANAGER || user.role === UserRole.ADMIN);\n  }\n  isAdmin() {\n    const user = this.getCurrentUser();\n    return !!user && user.role === UserRole.ADMIN;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","map","tap","environment","UserRole","AuthService","constructor","http","apiUrl","userServiceUrl","tokenKey","userKey","currentUserSubject","currentUser$","asObservable","isAuthenticatedSubject","isAuthenticated$","loadStoredUser","token","localStorage","getItem","userJson","user","JSON","parse","next","e","logout","login","credentials","post","pipe","response","setItem","stringify","register","registration","removeItem","getToken","getCurrentUser","value","hasRole","role","isEmployee","EMPLOYEE","MANAGER","ADMIN","isManager","isAdmin","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\fac\\an3_sem2\\ps\\proiect_ps - Copy (2)\\art-gallery-frontend\\src\\app\\view-models\\commands\\auth.command.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\nimport { environment } from '@env/environment';\r\nimport { User, UserCredentials, UserRegistration, UserRole } from '../../models/user.model';\r\n\r\ninterface AuthResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = environment.userServiceUrl;\r\n  private tokenKey = 'auth_token';\r\n  private userKey = 'current_user';\r\n  \r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n  \r\n  private isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\r\n  public isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadStoredUser();\r\n  }\r\n\r\n  private loadStoredUser(): void {\r\n    const token = localStorage.getItem(this.tokenKey);\r\n    const userJson = localStorage.getItem(this.userKey);\r\n    \r\n    if (token && userJson) {\r\n      try {\r\n        const user = JSON.parse(userJson) as User;\r\n        this.currentUserSubject.next(user);\r\n        this.isAuthenticatedSubject.next(true);\r\n      } catch (e) {\r\n        this.logout();\r\n      }\r\n    }\r\n  }\r\n\r\n  login(credentials: UserCredentials): Observable<User> {\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/auth/login`, credentials)\r\n      .pipe(\r\n        tap(response => {\r\n          localStorage.setItem(this.tokenKey, response.token);\r\n          localStorage.setItem(this.userKey, JSON.stringify(response.user));\r\n          this.currentUserSubject.next(response.user);\r\n          this.isAuthenticatedSubject.next(true);\r\n        }),\r\n        map(response => response.user)\r\n      );\r\n  }\r\n\r\n  register(registration: UserRegistration): Observable<User> {\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/auth/register`, registration)\r\n      .pipe(\r\n        tap(response => {\r\n          localStorage.setItem(this.tokenKey, response.token);\r\n          localStorage.setItem(this.userKey, JSON.stringify(response.user));\r\n          this.currentUserSubject.next(response.user);\r\n          this.isAuthenticatedSubject.next(true);\r\n        }),\r\n        map(response => response.user)\r\n      );\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem(this.tokenKey);\r\n    localStorage.removeItem(this.userKey);\r\n    this.currentUserSubject.next(null);\r\n    this.isAuthenticatedSubject.next(false);\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  getCurrentUser(): User | null {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  hasRole(role: UserRole): boolean {\r\n    const user = this.getCurrentUser();\r\n    return !!user && user.role === role;\r\n  }\r\n\r\n  isEmployee(): boolean {\r\n    const user = this.getCurrentUser();\r\n    return !!user && (user.role === UserRole.EMPLOYEE || user.role === UserRole.MANAGER || user.role === UserRole.ADMIN);\r\n  }\r\n\r\n  isManager(): boolean {\r\n    const user = this.getCurrentUser();\r\n    return !!user && (user.role === UserRole.MANAGER || user.role === UserRole.ADMIN);\r\n  }\r\n\r\n  isAdmin(): boolean {\r\n    const user = this.getCurrentUser();\r\n    return !!user && user.role === UserRole.ADMIN;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}